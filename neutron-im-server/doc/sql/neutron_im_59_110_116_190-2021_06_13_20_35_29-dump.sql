-- MySQL dump 10.13  Distrib 8.0.23, for Win64 (x86_64)
--
-- Host: 59.110.116.190    Database: neutron_im
-- ------------------------------------------------------
-- Server version	8.0.20

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `accounts`
--

DROP TABLE IF EXISTS `accounts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `accounts` (
  `id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '用户唯一id，自由设置，只能字母',
  `email` varchar(128) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '用户的邮箱',
  `nickname` varchar(64) COLLATE utf8mb4_general_ci NOT NULL COMMENT '用户昵称',
  `signature` varchar(140) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '签名',
  `tel` varchar(16) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '电话号码',
  `avatar` varchar(256) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '用户头像的Url',
  `password` varchar(128) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '用户密码,计算方式  hash(明文password + salt) ',
  `gender` tinyint DEFAULT '0' COMMENT '0 secret\n1 female\n2 male',
  `birthday` timestamp NULL DEFAULT NULL COMMENT '生日',
  `reg_time` timestamp NOT NULL DEFAULT (now()) COMMENT '注册时间',
  `status` tinyint NOT NULL DEFAULT '0' COMMENT '用户账号状态，正常0，封禁1，注销2',
  `extra` varchar(256) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '预留字段',
  PRIMARY KEY (`id`),
  UNIQUE KEY `account_id` (`id`),
  UNIQUE KEY `accounts_nickname_uindex` (`nickname`),
  UNIQUE KEY `accounts_email_uindex` (`email`),
  UNIQUE KEY `accounts_tel_uindex` (`tel`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='用户账户表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `accounts`
--

LOCK TABLES `accounts` WRITE;
/*!40000 ALTER TABLE `accounts` DISABLE KEYS */;
INSERT INTO `accounts` VALUES ('043354b2b99c11eb9b0000163e3058e5','hello@qq.com','hello',NULL,NULL,NULL,'$2a$10$5Gu9Dln50VHIEkUKEyy4QuXLTenwRQt6IP3RcMaIZIkDCMWUmCopS',0,NULL,'2021-05-20 18:48:50',0,NULL),('0c0f82a3ba3211eb9b0000163e3058e5','lisheng_lover@qq.com','xman',NULL,NULL,NULL,'$2a$10$sjBsGA.j1G/M621X41H2Oe0T6KYcPOg9gyTiyPQ1yk83xIU5IjM5G',0,NULL,'2021-05-21 12:42:47',0,NULL),('9fb4a6a598f411eb9b0000163e3058e5','837591140@qq.com','qqq123',NULL,NULL,NULL,'$2a$10$IJMsflR9Y.A4LPdfVk9T7OSp87o7ilV0kyWyaLLjN5qG7kIqtowVG',0,NULL,'2021-04-09 05:29:58',0,NULL),('adf8ed64ba3e11eb9b0000163e3058e5','2369595697@qq.com','lisheng','xman\'s count...',NULL,'adf8ed64ba3e11eb9b0000163e3058e5-kbBZt6fA.jpeg','$2a$10$CvoMp1zEHQ.8wz53/lefYOLnSiAcBFV.gqjuQ2PDbUG3ifXK1BXhu',2,NULL,'2021-05-21 14:13:13',0,NULL),('bcbc3a7eba3111eb9b0000163e3058e5','lisheng_rc@163.com','erbai',NULL,NULL,NULL,'$2a$10$.6MCa4LqSB8UNblWj1Ynoe4bH4lQ9qopIlx4KVEkdYq22kxhJOfiC',0,NULL,'2021-05-21 12:40:34',0,NULL),('c94d6fbdb99c11eb9b0000163e3058e5','mine@qq.com','mine','i want something just like this',NULL,'c94d6fbdb99c11eb9b0000163e3058e5-keZbEAZx.jpg','$2a$10$retGpLxI3aqK9br4hHzc.eyZvWmuIQpxdfX9fLBk5pW4cq9JfGU6e',1,'1999-08-24 19:01:44','2021-05-20 18:54:20',0,NULL),('e024e025969d11eb9b0000163e3058e5','im123456@qq.com','行也成文',NULL,NULL,NULL,'$2a$10$TZDwadmHzg5yHpQccxSqI.hMkJCw/aG7DdkdFOUtab4NMtrWG8bTW',0,NULL,'2021-04-06 06:03:57',0,NULL),('fcd93fe091b511eb9b0000163e3058e5','u_hJwMwUfoajSxJ6@qq.com','u_hRyoezpKjQ97tg',NULL,NULL,NULL,'hello',0,NULL,'2021-03-14 14:06:01',0,NULL),('fcd945db91b511eb9b0000163e3058e5','763653451@qq.com','iamironman','If You',NULL,'//localhost:3002/avatar/fcd945db91b511eb9b0000163e3058e5-jwZzWWMr.jpg','$2a$10$mIwasCfD1yf0KuF4LmINVOJ18NxhwQPdK1Lr1HFfNlGYq.XZIxCia',2,'1999-05-08 04:11:53','2021-03-15 11:58:10',0,NULL),('fcd947a491b511eb9b0000163e3058e5','u_K1zf49daLV4Zgb@qq.com','u_3pIhYuyVtVpaev',NULL,NULL,NULL,'hello',0,NULL,'2021-03-15 05:26:10',0,NULL),('fcd9489991b511eb9b0000163e3058e5','abc@abc.com','abc',NULL,NULL,'//localhost:3002/avatar/fcd9489991b511eb9b0000163e3058e5-tddQimMi.gif','$2a$10$2S858.3mmAtp16MccRo8VuBLbN9LNuuA8dn1eslSP6zcHxPKgWWq6',0,NULL,'2021-03-23 04:37:40',0,NULL);
/*!40000 ALTER TABLE `accounts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `chats`
--

DROP TABLE IF EXISTS `chats`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `chats` (
  `id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '会话id,当前的回话id，它作用是标识一个回话，比如我跟你聊天or 你跟我聊天，我们的回话id应该是一致的，对于群聊也是，在群中发送消息，每个人的回话id是一致的。',
  `account_id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '消息所属用户的id',
  `target_id` varchar(32) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `type` tinyint DEFAULT '0' COMMENT '会话类型，私聊，群聊，系统消息',
  `sender_id` varchar(32) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '最后一条消息的发送者id，用来判别消息是谁发的',
  `receiver_id` varchar(32) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '最后一条消息的接收者id',
  `last_msg_time` timestamp NULL DEFAULT NULL COMMENT '最后消息时间',
  `last_msg_id` varchar(32) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '最后一条消息的id,主要用来比较，展示会话中的一些信息，比如xx撤回了一条信息',
  `last_msg_content` text COLLATE utf8mb4_general_ci,
  `unread_count` int DEFAULT NULL COMMENT '维度消息数目',
  `status` tinyint NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `chat_id` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `chats`
--

LOCK TABLES `chats` WRITE;
/*!40000 ALTER TABLE `chats` DISABLE KEYS */;
INSERT INTO `chats` VALUES ('15f574b8baa711eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','adf8ed64ba3e11eb9b0000163e3058e5',0,NULL,NULL,NULL,NULL,NULL,NULL,0),('59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,'fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','2021-05-27 18:50:21','410000200307146921','//localhost:3002/upload/fcd945db91b511eb9b0000163e3058e5-4L3zL5jL.jpeg',108,0);
/*!40000 ALTER TABLE `chats` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `favorites`
--

DROP TABLE IF EXISTS `favorites`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `favorites` (
  `id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL,
  `title` varchar(256) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '相当于备注',
  `content_type` tinyint DEFAULT '0' COMMENT '0 最近动态，1 代码片段，2 最近动态， 3 消息 4 url',
  `content` varchar(512) COLLATE utf8mb4_general_ci NOT NULL COMMENT '内容id 或 url',
  `collection_name` varchar(64) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '集合名',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `status` tinyint DEFAULT '0' COMMENT '0 正常 1 隐藏 2 删除',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='收藏表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `favorites`
--

LOCK TABLES `favorites` WRITE;
/*!40000 ALTER TABLE `favorites` DISABLE KEYS */;
/*!40000 ALTER TABLE `favorites` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `friends`
--

DROP TABLE IF EXISTS `friends`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `friends` (
  `id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '自增长主键',
  `fid_1` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '账号1',
  `cate_name_1` varchar(32) COLLATE utf8mb4_general_ci DEFAULT '我的好友' COMMENT '账号2在账号1列表中的组名',
  `remark_name_1` varchar(128) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `status_1` tinyint unsigned DEFAULT '0' COMMENT '好友状态，正常为0，1拉黑2 -> 1，2拉黑->2,互相拉黑3，已经删除->4',
  `fid_2` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '账号2',
  `cate_name_2` varchar(32) COLLATE utf8mb4_general_ci DEFAULT '我的好友' COMMENT '账号1在账号2列表中的组名',
  `remark_name_2` varchar(128) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `status_2` tinyint DEFAULT '0',
  `link_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '添加好友时间',
  `type` tinyint unsigned DEFAULT '0' COMMENT '类型',
  `extra` text COLLATE utf8mb4_general_ci COMMENT '预留字段',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='朋友关系表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `friends`
--

LOCK TABLES `friends` WRITE;
/*!40000 ALTER TABLE `friends` DISABLE KEYS */;
INSERT INTO `friends` VALUES ('7fd78c6eb9a111eb9b0000163e3058e5','c94d6fbdb99c11eb9b0000163e3058e5','我的好友',NULL,0,'fcd945db91b511eb9b0000163e3058e5','我的好友',NULL,0,'2021-05-20 19:28:05',0,NULL),('ad6838c991c011eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','陌生人','ifyou',0,'fcd9489991b511eb9b0000163e3058e5','我的好友',NULL,NULL,'2021-03-20 16:03:25',0,NULL),('ad683d8991c011eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','我的好友','hellojwt',0,'fcd93fe091b511eb9b0000163e3058e5','我的好友',NULL,NULL,'2021-03-23 11:54:55',0,NULL);
/*!40000 ALTER TABLE `friends` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `groups`
--

DROP TABLE IF EXISTS `groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `groups` (
  `id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '自增长主键,便于检索',
  `gid` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '群组唯一id',
  `owner_id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '群主账号的自增长id',
  `name` varchar(64) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '群名',
  `desc` varchar(256) COLLATE utf8mb4_general_ci NOT NULL COMMENT '群描述',
  `tags` varchar(256) COLLATE utf8mb4_general_ci NOT NULL COMMENT '群标签',
  `avatar` varchar(256) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '头像',
  `numbers` int DEFAULT NULL COMMENT '群成员数量',
  `managers_json` text COLLATE utf8mb4_general_ci COMMENT '管理员和主要成员的json数据',
  `create_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `type` tinyint unsigned DEFAULT NULL COMMENT '群组类型，例如师生群，社区群等',
  `status` tinyint unsigned NOT NULL COMMENT '类型',
  `extra` text COLLATE utf8mb4_general_ci COMMENT '预留字段',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='群组列表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `groups`
--

LOCK TABLES `groups` WRITE;
/*!40000 ALTER TABLE `groups` DISABLE KEYS */;
/*!40000 ALTER TABLE `groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `groups_members`
--

DROP TABLE IF EXISTS `groups_members`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `groups_members` (
  `id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '自增长主键',
  `mid` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '用户id',
  `group_id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '所属群的id',
  `avatar` varchar(256) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '成员头像',
  `group_nickname` varchar(64) COLLATE utf8mb4_general_ci DEFAULT NULL COMMENT '成员在群内的名片',
  `group_role` tinyint DEFAULT '2' COMMENT '成员角色，群主0，管理员1，普通成员2，访客3，特殊身份',
  `group_status` tinyint DEFAULT '0' COMMENT '发言状态：正常，禁言',
  `muted_time` timestamp NULL DEFAULT NULL COMMENT '被禁言的时间',
  `muted_during` int DEFAULT NULL COMMENT '被禁言的持续时长',
  `enter_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP COMMENT '进群时间',
  `extra` text COLLATE utf8mb4_general_ci COMMENT '预留字段',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='群组成员';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `groups_members`
--

LOCK TABLES `groups_members` WRITE;
/*!40000 ALTER TABLE `groups_members` DISABLE KEYS */;
/*!40000 ALTER TABLE `groups_members` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `messages`
--

DROP TABLE IF EXISTS `messages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `messages` (
  `id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '自增长id',
  `chat_id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL,
  `sender_id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '源账号',
  `receiver_id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '目标账号，可能是群',
  `chat_type` tinyint unsigned DEFAULT '0' COMMENT '会话类型，好友私聊，群聊，临时会话',
  `content_type` int unsigned NOT NULL COMMENT '消息类型',
  `content` text COLLATE utf8mb4_general_ci COMMENT '消息内容',
  `file_info` text COLLATE utf8mb4_general_ci COMMENT '仅当消息类型是文件的情况下才存在，如果是文件，存储文件信息的json数据',
  `time` timestamp NULL DEFAULT NULL COMMENT '消息发送时间',
  `status` tinyint unsigned DEFAULT '0' COMMENT '消息发送状态，发送中，发送完成，发送失败',
  `extra` text COLLATE utf8mb4_general_ci COMMENT '预留字段',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='消息内容表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `messages`
--

LOCK TABLES `messages` WRITE;
/*!40000 ALTER TABLE `messages` DISABLE KEYS */;
INSERT INTO `messages` VALUES ('029ffb5eb8c211eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-WxqYgIxE.webm','','2021-05-19 16:48:14',0,NULL),('06d45af0ba7a11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/upload/fcd9489991b511eb9b0000163e3058e5-9BgyDXsY.webm','','2021-05-21 21:18:03',0,NULL),('07922b5e969b11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'45648659458646',NULL,'2021-04-06 05:43:33',0,NULL),('08ef84ccba4311eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-5J81oLa9.webm','','2021-05-21 14:44:24',0,NULL),('0f0da561942b11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'164164165416589458641658',NULL,'2021-04-03 03:16:58',0,NULL),('1154bd63b7f911eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'123456','','2021-05-18 16:49:50',0,NULL),('14899a6eb6a411eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd9489991b511eb9b0000163e3058e5-hGm6bzwV.png','','2021-05-17 00:08:59',0,NULL),('18423c43ba8a11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'123456','','2021-05-21 23:13:04',0,NULL),('1d3f637cba8a11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'fasdf','','2021-05-21 23:13:12',0,NULL),('1fece58db6a511eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd9489991b511eb9b0000163e3058e5-9Z3cP4hq.jpg','','2021-05-17 00:16:27',0,NULL),('21776011ba4b11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'hello body','','2021-05-21 15:42:21',0,NULL),('2337c2a4944c11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'测试一下发送消息',NULL,'2021-04-03 07:13:48',0,NULL),('241a5a56961b11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'12315648469456',NULL,'2021-04-05 14:28:06',0,NULL),('25a2ece2b7f911eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'12465','','2021-05-18 16:50:25',0,NULL),('2743b2c5b4d611eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'123456','','2021-05-14 17:02:24',0,NULL),('2a739432ba4b11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'hfajdsl','','2021-05-21 15:42:36',0,NULL),('2f1d2d6db7d711eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-kSOCxYDe.jpg','','2021-05-18 12:47:15',0,NULL),('2f2c21f2ba4e11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-Nsq7nWqN.webm','','2021-05-21 16:04:13',0,NULL),('332b0ddfba4711eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd9489991b511eb9b0000163e3058e5-yZLcZ5VU.jpg','','2021-05-21 15:13:58',0,NULL),('3351ace3b4d611eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'1231','','2021-05-14 17:02:44',0,NULL),('38daf80695eb11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'ffff1321356',NULL,'2021-04-05 08:45:05',0,NULL),('3929a166908f11eb9b0000163e3058e5','13','3','4',0,0,'test',NULL,'2021-03-29 13:03:55',0,NULL),('3a05fd74ba4b11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'123456','','2021-05-21 15:43:02',0,NULL),('3dda3700ba4311eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'fhadsfjklasdj sadjfkl;a s','','2021-05-21 14:45:52',0,NULL),('401e2e3bba4311eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'fdhsakjadfsk','','2021-05-21 14:45:57',0,NULL),('4373a8a1b8be11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-aFzReCAf.webm','','2021-05-19 16:21:25',0,NULL),('465c9578ba4b11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'successfully','','2021-05-21 15:43:23',0,NULL),('495a9af1942c11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'123168465',NULL,'2021-04-03 03:25:48',0,NULL),('49cae47890a211eb9b0000163e3058e5','13','3','4',0,0,'test',NULL,'2021-03-29 15:20:26',0,NULL),('4bfe4d96baa811eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'if you are ','','2021-05-22 02:49:14',0,NULL),('4f5d347aba4b11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'if ou rsjfdl asjfkladsj','','2021-05-21 15:43:38',0,NULL),('524ee6d2ba4b11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'fdsafds','','2021-05-21 15:43:43',0,NULL),('5272cd51969c11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'这就是测试',NULL,'2021-04-06 05:52:49',0,NULL),('55e2d87fba4311eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'😆😁😋😜这既是表情','','2021-05-21 14:46:33',0,NULL),('57b7cc4b969c11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'测试就是这',NULL,'2021-04-06 05:52:58',0,NULL),('5b1760f1b7f911eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-eK3pJbve.gif','','2021-05-18 16:51:54',0,NULL),('5bb5b96dbf1c11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/upload/fcd945db91b511eb9b0000163e3058e5-jbjKNlZh.jpg','','2021-05-27 18:50:09',0,NULL),('5db8020aba9f11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/upload/fcd945db91b511eb9b0000163e3058e5-8AyHpCuk.webm','','2021-05-22 01:45:18',0,NULL),('5de93d85979e11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'4月7日 08：39 PM',NULL,'2021-04-07 12:39:58',0,NULL),('61cc9c63ba9f11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/upload/fcd945db91b511eb9b0000163e3058e5-btfDq6Jq.png','','2021-05-22 01:45:25',0,NULL),('62f5b826bf1c11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/upload/fcd945db91b511eb9b0000163e3058e5-4L3zL5jL.jpeg','','2021-05-27 18:50:21',0,NULL),('65604f3cba4a11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd9489991b511eb9b0000163e3058e5-Ql60wnMr.jpg','','2021-05-21 15:36:59',0,NULL),('6660a257969a11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'fadsfasd',NULL,'2021-04-06 05:39:02',0,NULL),('669db3ee969d11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'如果爱情',NULL,'2021-04-06 06:00:32',0,NULL),('66fa9fa7ba4711eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd9489991b511eb9b0000163e3058e5-y2Tl3PfV.jpg','','2021-05-21 15:15:26',0,NULL),('687a7771ba4311eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'重新来','','2021-05-21 14:47:04',0,NULL),('69324841b6cd11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-rEqGwZDS.jpg','','2021-05-17 05:04:50',0,NULL),('6d560120969a11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'犯法的事发生',NULL,'2021-04-06 05:39:14',0,NULL),('754ddd85ba8a11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'反对法','','2021-05-21 23:15:40',0,NULL),('7ba3e47aba4811eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd9489991b511eb9b0000163e3058e5-SAVXvqio.gif','','2021-05-21 15:23:20',0,NULL),('7d939d13942911eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'12316456486954641653',NULL,'2021-04-03 03:05:48',0,NULL),('7dd1f8d6b66f11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-vIwWqZqO.jpg','','2021-05-16 17:52:32',0,NULL),('7ddf9e13969a11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'发大水发射点',NULL,'2021-04-06 05:39:43',0,NULL),('7eb0a2a2b3e211eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'😜','','2021-05-13 11:58:14',0,NULL),('804d2b8fba6311eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/upload/img/fcd945db91b511eb9b0000163e3058e5-J1lDDNKK.jpg','','2021-05-21 18:36:48',0,NULL),('81685074ba8a11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'hello我f','','2021-05-21 23:16:00',0,NULL),('86a34bffba4c11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-alOOKWap.webm','','2021-05-21 15:52:20',0,NULL),('8c6e51d6b97311eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'fcd945db91b511eb9b0000163e3058e5-3TGH6QXv.jpg','','2021-05-20 13:59:05',0,NULL),('92f3502eba4811eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd9489991b511eb9b0000163e3058e5-8H8DbOn7.jpg','','2021-05-21 15:24:01',0,NULL),('970a0928b6a111eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-hUYTjBf9.jpg','','2021-05-16 23:51:09',0,NULL),('9b00dbae944c11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'如果这都不算爱',NULL,'2021-04-03 07:17:09',0,NULL),('9c68d8a1ba4911eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'??????????????????????\n','','2021-05-21 15:31:28',0,NULL),('9eecc5d3ba4c11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/static/fcd9489991b511eb9b0000163e3058e5-XEYM0JAW.webm','','2021-05-21 15:53:01',0,NULL),('a2e92591b7f811eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'faf','','2021-05-18 16:46:45',0,NULL),('a37cc668b7ff11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'123456','','2021-05-18 17:36:53',0,NULL),('a58fd2e1b8bd11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-aFzReCAf.webm','','2021-05-19 16:17:00',0,NULL),('a8648040ba8811eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/upload/fcd945db91b511eb9b0000163e3058e5-x1tLmMCI.webm','','2021-05-21 23:02:45',0,NULL),('a97f4988ba4611eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'123456','','2021-05-21 15:10:22',0,NULL),('aa0c4ed3b97311eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-OonTuWYj.webm','','2021-05-20 13:59:55',0,NULL),('ac0f7e3eba4211eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd9489991b511eb9b0000163e3058e5-NmP7PMFX.gif','','2021-05-21 14:41:48',0,NULL),('ae0334c0b8c011eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-k765sOiD.webm','','2021-05-19 16:38:43',0,NULL),('b319787fb0a911eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'123456😆','','2021-05-09 09:34:05',0,NULL),('b35e8bd4ba4a11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd9489991b511eb9b0000163e3058e5-JR0HJc9X.gif','','2021-05-21 15:39:08',0,NULL),('b6866e3fb6a311eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-ndldZnx9.jpg','','2021-05-17 00:06:20',0,NULL),('b7bff2c3ba5a11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-6EA3gAiH.webm','','2021-05-21 17:33:55',0,NULL),('bd8f43bdb7f611eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'123465','','2021-05-18 16:33:11',0,NULL),('bf4c4665942811eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'1234567489gckckfvgjukkh vk',NULL,'2021-04-03 03:00:28',0,NULL),('c04fa9a7b6a111eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd9489991b511eb9b0000163e3058e5-uxQGc8N7.jpg','','2021-05-16 23:52:18',0,NULL),('c5511ee8942b11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'12314658694586486cgghjgfkjfkjghjgjguygh',NULL,'2021-04-03 03:22:07',0,NULL),('c94b73c0ba4711eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'fasdfasdf','','2021-05-21 15:18:24',0,NULL),('cbe49995ba7911eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'🤭🤭我觉得很棒，你觉得呢','','2021-05-21 21:16:23',0,NULL),('cc1c7671ba4211eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-gXXjGsWt.webm','','2021-05-21 14:42:42',0,NULL),('cffba2c3b7ff11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-97fcD90D.jpg','','2021-05-18 17:38:07',0,NULL),('d0511c8db72011eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd9489991b511eb9b0000163e3058e5-vcK3gaxG.jpg','','2021-05-17 15:01:50',0,NULL),('d2e924beb7ff11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-alyF2eEU.jpg','','2021-05-18 17:38:12',0,NULL),('d44fb5c3b7ff11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-0SQPSrXD.jpg','','2021-05-18 17:38:15',0,NULL),('d504c55e944b11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'123164kyfcxkhycxk',NULL,'2021-04-03 07:11:36',0,NULL),('d5af3668b7fc11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-FqNiT0Tf.jpg','','2021-05-18 17:16:48',0,NULL),('d7792d28baa711eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'尖峰时刻','','2021-05-22 02:45:58',0,NULL),('d8300154979c11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'123456',NULL,'2021-04-07 12:29:04',0,NULL),('d9098acdba4411eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'fadsfasd','','2021-05-21 14:57:23',0,NULL),('d9a7ef99b66011eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'This is first message sent by ctrl + enter','','2021-05-16 16:07:43',0,NULL),('dd15ed13ba4311eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'control','','2021-05-21 14:50:20',0,NULL),('dd30bcb8969b11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'123456789',NULL,'2021-04-06 05:49:32',0,NULL),('dd603bdeba6311eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/upload/fcd945db91b511eb9b0000163e3058e5-uOQfsIL1.png','','2021-05-21 18:39:24',0,NULL),('e280b654969a11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'如果这都不算爱',NULL,'2021-04-06 05:42:31',0,NULL),('e2a0f9eebaa711eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/upload/fcd945db91b511eb9b0000163e3058e5-H3J6m0Ce.png','','2021-05-22 02:46:17',0,NULL),('e6752013ba7911eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'我不要你觉得，我要我觉得😜','','2021-05-21 21:17:08',0,NULL),('e744640cb0aa11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'12345679','','2021-05-09 09:42:45',0,NULL),('e75d7820ba4611eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'fadsfas','','2021-05-21 15:11:44',0,NULL),('e809fb06942911eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'456456469845646',NULL,'2021-04-03 03:08:46',0,NULL),('e8cfbb7abaa711eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/upload/fcd945db91b511eb9b0000163e3058e5-CTMyxNUV.jpg','','2021-05-22 02:46:28',0,NULL),('e9658a95ba6411eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/upload/fcd9489991b511eb9b0000163e3058e5-0uLlhKVe.gif','','2021-05-21 18:46:54',0,NULL),('ede355c3baa711eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,2,'//localhost:3002/upload/fcd945db91b511eb9b0000163e3058e5-IjCy4C9z.webm','','2021-05-22 02:46:36',0,NULL),('ede84f7e90a111eb9b0000163e3058e5','13','fcd9489991b511eb9b0000163e3058e5','4',0,0,'test',NULL,'2021-03-29 15:17:52',0,NULL),('ee2ab6ec95eb11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'123456789',NULL,'2021-04-05 08:50:09',0,NULL),('f02f52f1ba7911eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/upload/fcd9489991b511eb9b0000163e3058e5-npSHLeSe.gif','','2021-05-21 21:17:25',0,NULL),('f0dbbf9f908e11eb9b0000163e3058e5','13','3','4',0,0,'test',NULL,'2021-03-29 13:01:53',0,NULL),('f2944fbb944b11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,0,'ghjhkghjgkhgkjhjgkjgk huign yiuny',NULL,'2021-04-03 07:12:27',0,NULL),('f658393cb6a111eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-IIMn0ioj.jpg','','2021-05-16 23:53:49',0,NULL),('f681dc1bb7fe11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd945db91b511eb9b0000163e3058e5-Sy4xxOIk.jpg','','2021-05-18 17:32:02',0,NULL),('fba7dcbfba4a11eb9b0000163e3058e5','59132247917b11eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,1,'//localhost:3002/static/fcd9489991b511eb9b0000163e3058e5-2dxqLrF3.gif','','2021-05-21 15:41:15',0,NULL);
/*!40000 ALTER TABLE `messages` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `moments`
--

DROP TABLE IF EXISTS `moments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `moments` (
  `id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT 'uuid',
  `title` varchar(256) COLLATE utf8mb4_general_ci NOT NULL COMMENT '标题',
  `author_id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '作者id',
  `create_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `update_time` timestamp NULL DEFAULT NULL COMMENT '更新时间',
  `content_type` tinyint NOT NULL DEFAULT '0' COMMENT '内容类型',
  `is_original` tinyint DEFAULT '1',
  `content` text COLLATE utf8mb4_general_ci NOT NULL COMMENT '内容',
  `copyright` text COLLATE utf8mb4_general_ci,
  `version` varchar(32) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `status` tinyint NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='最近动态表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `moments`
--

LOCK TABLES `moments` WRITE;
/*!40000 ALTER TABLE `moments` DISABLE KEYS */;
INSERT INTO `moments` VALUES ('03b3d9ccb5a111eb9b0000163e3058e5','Test','fcd945db91b511eb9b0000163e3058e5','2021-05-15 17:14:29','2021-05-15 17:14:29',0,0,'Test','MIT','v1.0',0),('22ef886ebaa811eb9b0000163e3058e5','React和Vue中，是如何监听变量变化','fcd945db91b511eb9b0000163e3058e5','2021-05-22 02:48:05','2021-05-22 02:48:05',0,1,'## React 中\n\n### 本地调试React代码的方法\n\n- 先将React代码下载到本地，进入项目文件夹后`yarn build`\n- 利用create-react-app创建一个自己的项目\n- 把react源码和自己刚刚创建的项目关联起来，之前build源码到build文件夹下面，然后cd到react文件夹下面的build文件夹下。里面有node\\_modules文件夹，进入此文件夹。发现有react文件夹和react-dom文件夹。分别进入到这两个文件夹。分别运行yarn link。此时创建了两个快捷方式。react和react-dom\n- cd到自己项目的目录下，运行yarn link react react-dom 。此时在你项目里就使用了react源码下的build的相关文件。如果你对react源码有修改，就刷新下项目，就能里面体现在你的项目里。\n\n### 场景\n\n假设有这样一个场景，父组件传递子组件一个A参数，子组件需要监听A参数的变化转换为state。\n\n### 16之前\n\n在React以前我们可以使用`componentWillReveiveProps`来监听`props`的变换\n\n### 16之后\n\n在最新版本的React中可以使用新出的`getDerivedStateFromProps`进行props的监听，`getDerivedStateFromProps`可以返回`null`或者一个对象，如果是对象，则会更新`state`\n\n### getDerivedStateFromProps触发条件\n\n我们的目标就是找到 `getDerivedStateFromProps`的 触发条件\n\n我们知道，只要调用`setState`就会触发`getDerivedStateFromProps`，并且`props`的值相同，也会触发`getDerivedStateFromProps`(16.3版本之后)\n\n`setState`在`react.development.js`当中\n\n```\nComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === \'object\' || typeof partialState === \'function\' || partialState == null) ? invariant(false, \'setState(...): takes an object of state variables to update or a function which returns an object of state variables.\') : void 0;\n  this.updater.enqueueSetState(this, partialState, callback, \'setState\');\n};\n复制代码\n```\n\n```\nReactNoopUpdateQueue {\n    //...部分省略\n    \n    enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, \'setState\');\n  }\n}\n复制代码\n```\n\n执行的是一个警告方法\n\n```\nfunction warnNoop(publicInstance, callerName) {\n  {\n    // 实例的构造体\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || \'ReactClass\';\n    // 组成一个key 组件名称+方法名（列如setState）\n    var warningKey = componentName + \'.\' + callerName;\n    // 如果已经输出过警告了就不会再输出\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    // 在开发者工具的终端里输出警告日志 不能直接使用 component.setState来调用 \n    warningWithoutStack$1(false, \"Can\'t call %s on a component that is not yet mounted. \" + \'This is a no-op, but it might indicate a bug in your application. \' + \'Instead, assign to `this.state` directly or define a `state = {};` \' + \'class property with the desired state in the %s component.\', callerName, componentName);\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n复制代码\n```\n\n看来`ReactNoopUpdateQueue`是一个抽象类，实际的方法并不是在这里实现的，同时我们看下最初`updater`赋值的地方，初始化`Component`时，会传入实际的`updater`\n\n```\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  // If a component has string refs, we will assign a different object later.\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n复制代码\n```\n\n我们在组件的构造方法当中将`this`进行打印\n\n```\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    //..省略\n\n    console.log(\'constructor\', this);\n  }\n}\n复制代码\n```\n\n![-w766](https://user-gold-cdn.xitu.io/2018/11/13/1670c3f8c07a542f?imageView2/0/w/1280/h/960/format/webp/ignore-error/1)\n\n方法指向的是，在`react-dom.development.js`的`classComponentUpdater`\n\n```\nvar classComponentUpdater = {\n  // 是否渲染\n  isMounted: isMounted,\n  enqueueSetState: function(inst, payload, callback) {\n    // inst 是fiber\n    inst = inst._reactInternalFiber;\n    // 获取时间\n    var currentTime = requestCurrentTime();\n    currentTime = computeExpirationForFiber(currentTime, inst);\n    // 根据更新时间初始化一个标识对象\n    var update = createUpdate(currentTime);\n    update.payload = payload;\n    void 0 !== callback && null !== callback && (update.callback = callback);\n    // 排队更新 将更新任务加入队列当中\n    enqueueUpdate(inst, update);\n    //\n    scheduleWork(inst, currentTime);\n  },\n  // ..省略\n}\n复制代码\n```\n\nenqueueUpdate 就是将更新任务加入队列当中\n\n```\nfunction enqueueUpdate(fiber, update) {\n  var alternate = fiber.alternate;\n  // 如果alternat为空并且更新队列为空则创建更新队列\n  if (null === alternate) {\n    var queue1 = fiber.updateQueue;\n    var queue2 = null;\n    null === queue1 &&\n      (queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState));\n  } else\n\n    (queue1 = fiber.updateQueue),\n      (queue2 = alternate.updateQueue),\n      null === queue1\n        ? null === queue2\n          ? ((queue1 = fiber.updateQueue = createUpdateQueue(\n              fiber.memoizedState\n            )),\n            (queue2 = alternate.updateQueue = createUpdateQueue(\n              alternate.memoizedState\n            )))\n          : (queue1 = fiber.updateQueue = cloneUpdateQueue(queue2))\n        : null === queue2 &&\n          (queue2 = alternate.updateQueue = cloneUpdateQueue(queue1));\n  null === queue2 || queue1 === queue2\n    ? appendUpdateToQueue(queue1, update)\n    : null === queue1.lastUpdate || null === queue2.lastUpdate\n      ? (appendUpdateToQueue(queue1, update),\n        appendUpdateToQueue(queue2, update))\n      : (appendUpdateToQueue(queue1, update), (queue2.lastUpdate = update));\n}\n复制代码\n```\n\n我们看scheduleWork下\n\n```\nfunction scheduleWork(fiber, expirationTime) {\n  // 获取根 node\n  var root = scheduleWorkToRoot(fiber, expirationTime);\n  null !== root &&\n    (!isWorking &&\n      0 !== nextRenderExpirationTime &&\n      expirationTime < nextRenderExpirationTime &&\n      ((interruptedBy = fiber), resetStack()),\n    markPendingPriorityLevel(root, expirationTime),\n    (isWorking && !isCommitting$1 && nextRoot === root) ||\n      requestWork(root, root.expirationTime),\n    nestedUpdateCount > NESTED_UPDATE_LIMIT &&\n      ((nestedUpdateCount = 0), reactProdInvariant(\"185\")));\n}\n复制代码\n```\n\n```\nfunction requestWork(root, expirationTime) {\n  // 将需要渲染的root进行记录\n  addRootToSchedule(root, expirationTime);\n  if (isRendering) {\n    // Prevent reentrancy. Remaining work will be scheduled at the end of\n    // the currently rendering batch.\n    return;\n  }\n\n  if (isBatchingUpdates) {\n    // Flush work at the end of the batch.\n    if (isUnbatchingUpdates) {\n      // ...unless we\'re inside unbatchedUpdates, in which case we should\n      // flush it now.\n      nextFlushedRoot = root;\n      nextFlushedExpirationTime = Sync;\n      performWorkOnRoot(root, Sync, true);\n    }\n    // 执行到这边直接return，此时setState()这个过程已经结束\n    return;\n  }\n\n  // TODO: Get rid of Sync and use current time?\n  if (expirationTime === Sync) {\n    performSyncWork();\n  } else {\n    scheduleCallbackWithExpirationTime(root, expirationTime);\n  }\n}\n复制代码\n```\n\n太过复杂，一些方法其实还没有看懂，但是根据断点可以把执行顺序先理一下，在`setState`之后会执行`performSyncWork`，随后是如下的一个执行顺序\n\nperformSyncWork => performWorkOnRoot => renderRoot => workLoop => performUnitOfWork => beginWork => applyDerivedStateFromProps\n\n最终方法是执行\n\n```\nfunction applyDerivedStateFromProps(\n  workInProgress,\n  ctor,\n  getDerivedStateFromProps,\n  nextProps\n) {\n  var prevState = workInProgress.memoizedState;\n      {\n        if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {\n          // Invoke the function an extra time to help detect side-effects.\n          getDerivedStateFromProps(nextProps, prevState);\n        }\n      }\n      // 获取改变的state\n      var partialState = getDerivedStateFromProps(nextProps, prevState);\n      {\n        // 对一些错误格式进行警告\n        warnOnUndefinedDerivedState(ctor, partialState);\n      } // Merge the partial state and the previous state.\n      // 判断getDerivedStateFromProps返回的格式是否为空，如果不为空则将由原的state和它的返回值合并\n      var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);\n      // 设置state\n      // 一旦更新队列为空，将派生状态保留在基础状态当中\n      workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the\n      // base state.\n      var updateQueue = workInProgress.updateQueue;\n\n      if (updateQueue !== null && workInProgress.expirationTime === NoWork) {\n        updateQueue.baseState = memoizedState;\n      }\n}\n```','','v1.0',0),('3770e31db59e11eb9b0000163e3058e5','做了一夜动画，让大家十分钟搞懂Webpack','fcd945db91b511eb9b0000163e3058e5','2021-05-15 16:54:28','2021-05-15 16:54:28',0,1,'## 一、什么是webpack\n\nwebpack是一个打包工具，他的宗旨是一切静态资源皆可打包。\n\n![image-20210506104502010](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2bc23b74cff149eeadef5ac09821c0f8~tplv-k3u1fbpfcp-zoom-1.image)\n\n## 二、原理分析\n\n首先我们通过一个制作一个打包文件的原型。\n\n假设有两个js模块，这里我们先假设这两个模块是复合commomjs标准的es5模块。\n\n语法和模块化规范转换的事我们先放一放，后面说。\n\n我们的目的是将这两个模块打包为一个能在浏览器端运行的文件，这个文件其实叫bundle.js。\n\n比如\n\n```js\n// index.js\nvar add = require(\'add.js\').default\nconsole.log(add(1 , 2))\n\n// add.js\nexports.default = function(a,b) {return a + b}\n复制代码\n```\n\n假设在浏览器中直接执行这个程序肯定会有问题 最主要的问题是浏览器中没有exports对象与require方法所以一定会报错。\n\n我们需要通过模拟exports对象和require方法\n\n#### 1\\. 模拟exports对象\n\n首先我们知道如果在nodejs打包的时候我们会使用sfs.readfileSync()来读取js文件。这样的话js文件会是一个字符串。而如果需要将字符串中的代码运行会有两个方法分别是new Function与Eval。\n\n在这里面我们选用执行效率较高的eval。\n\n![](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/789b3a42946a40fbb426728c5da9c6d2~tplv-k3u1fbpfcp-zoom-1.image)\n\n```js\nexports = {}\neval(\'exports.default = function(a,b) {return a + b}\') // node文件读取后的代码字符串\nexports.default(1,3)\n复制代码\n```\n\n![image-20210507102528679](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7f06cbd5b7474711ad72978fd0310def~tplv-k3u1fbpfcp-zoom-1.image)\n\n上面这段代码的运行结果可以将模块中的方法绑定在exports对象中。由于子模块中会声明变量，为了不污染全局我们使用一个自运行函数来封装一下。\n\n```js\nvar exports = {}\n(function (exports, code) {\n	eval(code)\n})(exports, \'exports.default = function(a,b){return a + b}\')\n复制代码\n```\n\n#### 2\\. 模拟require函数\n\nrequire函数的功能比较简单，就是根据提供的file名称加载对应的模块。\n\n首先我们先看看如果只有一个固定模块应该怎么写。\n\n![Kapture 2021-05-09 at 11.20.31.gif](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9df1b81ac3d5409898026bba21cebab3~tplv-k3u1fbpfcp-watermark.image)\n\n```js\nfunction require(file) {\n	var exports = {};\n	(function (exports, code) {\n		eval(code)\n	})(exports, \'exports.default = function(a,b){return a + b}\')\n  return exports\n}\nvar add = require(\'add.js\').default\nconsole.log(add(1 , 2))\n复制代码\n```\n\n完成了固定模块，我们下面只需要稍加改动，将所有模块的文件名和代码字符串整理为一张key-value表就可以根据传入的文件名加载不同的模块了。\n\n```js\n(function (list) {\n  function require(file) {\n    var exports = {};\n    (function (exports, code) {\n      eval(code);\n    })(exports, list[file]);\n    return exports;\n  }\n  require(\"index.js\");\n})({\n  \"index.js\": `\n    var add = require(\'add.js\').default\n    console.log(add(1 , 2))\n        `,\n  \"add.js\": `exports.default = function(a,b){return a + b}`,\n});\n\n复制代码\n```\n\n当然要说明的一点是真正webpack生成的bundle.js文件中还需要增加模块间的依赖关系。\n\n叫做依赖图（Dependency Graph）\n\n类似下面的情况。\n\n```json\n{\n  \"./src/index.js\": {\n    \"deps\": { \"./add.js\": \"./src/add.js\" },\n    \"code\": \".....\"\n  },\n  \"./src/add.js\": {\n    \"deps\": {},\n    \"code\": \"......\"\n  }\n}\n\n复制代码\n```\n\n另外，由于大多数前端程序都习惯使用es6语法所以还需要预先将es6语法转换为es5语法。\n\n总结一下思路，webpack打包可以分为以下三个步骤：\n\n![webpack原理.gif](https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1d9c14d74aec4c14b7b7761e57af65d9~tplv-k3u1fbpfcp-watermark.image)\n\n1. 分析依赖\n    \n2. ES6转ES5\n    \n3. 替换exports和require\n    \n\n下面进入功能实现阶段。\n\n## 三、功能实现\n\n我们的目标是将以下两个个互相依赖的ES6Module打包为一个可以在浏览器中运行的一个JS文件(bundle.js)\n\n- 处理模块化\n- 多模块合并打包 - 优化网络请求\n\n/src/add.js\n\n```js\nexport default (a, b) => a + b \n复制代码\n```\n\n/src/index.js\n\n```js\nimport add from \"./add.js\";\nconsole.log(add(1 , 2))\n复制代码\n```\n\n### 1\\. 分析模块\n\n分析模块分为以下三个步骤：\n\n模块的分析相当于对读取的文件代码字符串进行解析。这一步其实和高级语言的编译过程一致。需要将模块解析为抽象语法树AST。我们借助babel/parser来完成。\n\n> AST （Abstract Syntax Tree）抽象语法树 在计算机科学中，或简称语法树（Syntax tree），是源代码语法结构的一种抽象表示。它以树状的形式表现编程语言的语法结构，树上的每个节点都表示源代码中的一种结构。（ [astexplorer.net/）](https://astexplorer.net/%EF%BC%89)\n\n```\nyarn add @babel/parser\nyarn add @babel/traverse\nyarn add @babel/core\nyarn add @babel/preset-env\n复制代码\n```\n\n- 读取文件\n    \n- 收集依赖\n    \n- 编译与AST解析\n    \n\n```js\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst parser = require(\"@babel/parser\");\nconst traverse = require(\"@babel/traverse\").default;\nconst babel = require(\"@babel/core\");\n\nfunction getModuleInfo(file) {\n  // 读取文件\n  const body = fs.readFileSync(file, \"utf-8\");\n\n  // 转化AST语法树\n  const ast = parser.parse(body, {\n    sourceType: \"module\", //表示我们要解析的是ES模块\n  });\n\n  // 依赖收集\n  const deps = {};\n  traverse(ast, {\n    ImportDeclaration({ node }) {\n      const dirname = path.dirname(file);\n      const abspath = \"./\" + path.join(dirname, node.source.value);\n      deps[node.source.value] = abspath;\n    },\n  });\n\n  // ES6转成ES5\n  const { code } = babel.transformFromAst(ast, null, {\n    presets: [\"@babel/preset-env\"],\n  });\n  const moduleInfo = { file, deps, code };\n  return moduleInfo;\n}\nconst info = getModuleInfo(\"./src/index.js\");\nconsole.log(\"info:\", info);\n复制代码\n```\n\n运行结果如下：\n\n!\\[image-20210507152817221\\](/Users/xiaran/Library/Application Support/typora-user-images/image-20210507152817221.png)\n\n### 2\\. 收集依赖\n\n上一步开发的函数可以单独解析某一个模块，这一步我们需要开发一个函数从入口模块开始根据依赖关系进行递归解析。最后将依赖关系构成为依赖图（Dependency Graph）\n\n```js\n/**\n * 模块解析\n * @param {*} file \n * @returns \n */\nfunction parseModules(file) {\n  const entry = getModuleInfo(file);\n  const temp = [entry];\n  const depsGraph = {};\n\n  getDeps(temp, entry);\n\n  temp.forEach((moduleInfo) => {\n    depsGraph[moduleInfo.file] = {\n      deps: moduleInfo.deps,\n      code: moduleInfo.code,\n    };\n  });\n  return depsGraph;\n}\n\n/**\n * 获取依赖\n * @param {*} temp \n * @param {*} param1 \n */\nfunction getDeps(temp, { deps }) {\n  Object.keys(deps).forEach((key) => {\n    const child = getModuleInfo(deps[key]);\n    temp.push(child);\n    getDeps(temp, child);\n  });\n}\n复制代码\n```\n\n### 3\\. 生成bundle文件\n\n这一步我们需要将刚才编写的执行函数和依赖图合成起来输出最后的打包文件。\n\n```js\nfunction bundle(file) {\n  const depsGraph = JSON.stringify(parseModules(file));\n  return `(function (graph) {\n        function require(file) {\n            function absRequire(relPath) {\n                return require(graph[file].deps[relPath])\n            }\n            var exports = {};\n            (function (require,exports,code) {\n                eval(code)\n            })(absRequire,exports,graph[file].code)\n            return exports\n        }\n        require(\'${file}\')\n    })(${depsGraph})`;\n}\n\n\n!fs.existsSync(\"./dist\") && fs.mkdirSync(\"./dist\");\nfs.writeFileSync(\"./dist/bundle.js\", content);\n复制代码\n```\n\n最后可以编写一个简单的测试程序测试一下结果。\n\n```html\n<script src=\"./dist/bundle.js\"></script>\n复制代码\n```\n\n![image-20210507154015030](https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/10c598934d754b28953786e7e6b32047~tplv-k3u1fbpfcp-zoom-1.image)\n\nok 学费了。\n\n后面有兴趣的话大家可以在考虑一下如何加载css文件或者图片base64 Vue SFC .vue。','fdsafas','v1.0',0),('387a8dbbb58a11eb9b0000163e3058e5','React项目实践（二）一个登录页面的状态迁移','fcd945db91b511eb9b0000163e3058e5','2021-05-15 14:31:22','2021-05-15 14:31:22',0,0,'上一篇[React项目实践（一）从框架配置讲起](https://juejin.im/post/6844903805411147790)\n\n这次谈谈一个登录页面的设计。在之前写过的项目中，我都是把表单放在一个页面也没有考虑到用户等待过程中的loading提示。这次重新规划一下，将展示组件与控制拆分，同时用状态机实现状态管理\n\n#### 状态分析\n\n前几天刚好看到一篇文章[前端状态管理请三思](https://juejin.im/post/6844903508626374663),觉得挺有意思的，原文作者利用状态机的思想，预先设想好所有状态和状态的迁移，优雅的管理页面登录状态避免过多变量的使用。本文参考作者的思想和代码，实现一个简单的登录页面。状态分析如下：\n\n- 初始登录页面是展示登录的表单（login form）\n- 当提交（submit）数据过程后，页面变为等待数据响应状态（loading）\n    - 数据响应有两种状态，成功（success）页面跳转到首页；失败（failure）页面提示错误\n    - 当登录成功，只有先退出登录（logout）之后才能重新登录\n    - 当登录失败，重新提交（submit）回到加载状态（loading）\n- logout之后回到login form状态\n\n依旧是模仿掘金app登录页面的一个实现效果：  \n\n![登录成功效果](https://user-gold-cdn.xitu.io/2019/3/26/169ba9e0b59b1cbf?imageslim)\n\n#### 定义状态机\n\n```\nconst machine = {\n  states: {\n    \'login form\': {\n      submit: \'loading\'\n    },\n    loading: {\n      success: \'profile\',\n      failure: \'error\'\n    },\n    profile: {\n      viewProfile: \'profile\',\n      logout: \'login form\'\n    },\n    error: {\n      submit: \'loading\'\n    }\n  }\n}\n复制代码\n```\n\n实现一个状态控制函数，返回下一个状态\n\n```\nconst stateTransformer = function(currentState, stepUp) {\n  let nextState\n  if (machine.states[currentState][stepUp]) {\n    nextState = machine.states[currentState][stepUp]\n  }\n  console.log(`${currentState} + ${stepUp} --> ${nextState}`)\n  return nextState || currentState\n}\n复制代码\n```\n\n我们把状态控制的变量存储在redux中，定义一个简单的auth模块如下,stateChanger纯函数用于控制currentState的状态迁移，每次操作结果返回进行状态变换\n\n```\nexport default {\n  namespace: \'auth\',\n  state: {\n    currentState: \'login form\'\n  },\n  reducers: {\n    stateChanger(state, {stepUp}) {\n      return {\n        ...state,\n        currentState: stateTransformer(state.currentState, stepUp)\n      }\n    }\n  },\n  effects: dispatch => ({\n  async loginByPhoneNumber(playload, state) {\n    dispatch.auth.stateChanger({stepUp: \'submit\'})\n    let {data} = await api.auth.loginByPhoneNumber(playload)\n    if (data.s === 0) {\n      dispatch.auth.stateChanger({stepUp: \'success\'})\n      saveData(\'juejin_token\', data.token)\n    } else {\n      dispatch.auth.stateChanger({stepUp: \'failure\'})\n      Toast.info(\'用户名或密码错误\', 2)\n    }\n  }\n})\n}\n复制代码\n```\n\n那么在组件中，我们很容易写一个控制状态变化的组件\n\n```\n\n  render() {\n    let {currentState} = this.props\n    return (\n      <>\n        {(() => {\n          switch (currentState) {\n            case \'loading\':\n              return (\n                //加载中展示组件\n              )\n            case \'profile\':\n              return <Redirect to={\'/\'} />//返回首页\n            default:\n              return (\n                //登录表单\n              )\n          }\n        })()}\n      </>\n    )\n  }\n复制代码\n```\n\n#### 具体配置补充\n\n为了配合项目的用户登录验证，我们重新搭建一个本地服务，在react配置路由的代理转发，具体地，在根目录下新建文件src/setupProxy.js，将`/api`开头请求转发到服务器\n\n```\nconst proxy = require(\'http-proxy-middleware\')\nmodule.exports = function(app) {\n  app.use(proxy(\'/api\', {target: \'http://localhost:8989/\', changeOrigin: true}))\n}\n复制代码\n```\n\nservices/api定义数据接口\n\n```\nexport async function loginByPhoneNumber({phoneNumber, password}) {\n  return post(\'/api/auth/type/phoneNumber\', {\n    body: {\n      phoneNumber,\n      password\n    }\n  })\n}\n复制代码\n```\n\n后端实现一个简单的中间件路由\n\n```\nconst Koa = require(\'koa\')\nconst router = require(\'./router\')\nrouter.post(\'/auth/type/phoneNumber\', async (ctx, next) => {\n  var {phoneNumber, password} = await parse.json(ctx.req)\n  if (phoneNumber === \'15111111111\' && password === \'123456\') {\n    let token = generateToken({uid: phoneNumber, password})\n    ctx.response.body = JSON.stringify({\n      s: 0,\n      m: `账号登录成功错误`,\n      d: \'\',\n      token\n    })\n  } else {\n    ctx.response.body = JSON.stringify({s: 1, m: \'账号信息错误\', d: \'\'})\n  }\n})\n复制代码\n```\n\n-\n\n[项目地址](https://github.com/SusieChang/react-app)  \n总之是个人的一个小实践，大家在登录页面的管理中有什么更好的做法吗？还有什么复杂的情况需要考虑','https://juejin.cn/post/6844903807751553037','v1.0',0),('38eaaff2b5a111eb9b0000163e3058e5','Test 2','fcd945db91b511eb9b0000163e3058e5','2021-05-15 17:16:00','2021-05-15 17:16:00',0,0,'Test 2','MIT','v1.0',0),('799aef33ba6b11eb9b0000163e3058e5','滚动条自定义','fcd945db91b511eb9b0000163e3058e5','2021-05-21 19:33:52','2021-05-21 19:33:52',1,1,'```css\n/* 滚动槽 */\n::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n::-webkit-scrollbar-track {\n  border-radius: 3px;\n  background: rgba(0,0,0,0.06);\n  -webkit-box-shadow: inset 0 0 5px rgba(0,0,0,0.08);\n}\n/* 滚动条滑块 */\n::-webkit-scrollbar-thumb {\n  border-radius: 3px;\n  background: rgba(0,0,0,0.12);\n  -webkit-box-shadow: inset 0 0 10px rgba(0,0,0,0.2);\n}\n\n/* 作者：是你的山楂\n链接：https://juejin.im/post/6844903613936959496\n来源：掘金\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 */\n``','','v1.0',0),('9872a3aab58911eb9b0000163e3058e5','fads','fcd945db91b511eb9b0000163e3058e5','2021-05-15 14:26:51','2021-05-15 14:26:51',1,1,'fdsafadfas','','v1.0',0),('b285a177910c11eb9b0000163e3058e5','React 入门教程（一）','fcd9489991b511eb9b0000163e3058e5','2021-03-30 04:02:08',NULL,0,0,'# 欢迎使用 Cmd Markdown 编辑阅读器\n\n------\n\n我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，**Cmd Markdown** 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown：\n\n> * 整理知识，学习笔记\n> * 发布日记，杂文，所见所想\n> * 撰写发布技术文稿（代码支持）\n> * 撰写发布学术论文（LaTeX 公式支持）\n\n![cmd-markdown-logo](https://www.zybuluo.com/static/img/logo.png)\n\n除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载：\n\n### [Windows/Mac/Linux 全平台客户端](https://www.zybuluo.com/cmd/)\n\n> 请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 <i class=\"icon-file\"></i> **新文稿** 或者使用快捷键 `Ctrl+Alt+N`。\n\n------\n\n## 什么是 Markdown\n\nMarkdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，**粗体** 或者 *斜体* 某些文字，更棒的是，它还可以\n\n### 1. 制作一份待办事宜 [Todo 列表](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#13-待办事宜-todo-列表)\n\n- [ ] 支持以 PDF 格式导出文稿\n- [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率\n- [x] 新增 Todo 列表功能\n- [x] 修复 LaTex 公式渲染问题\n- [x] 新增 LaTex 公式编号功能\n\n### 2. 书写一个质能守恒公式[^LaTeX]\n\n$$E=mc^2$$\n\n### 3. 高亮一段代码[^code]\n\n```python\n@requires_authorization\nclass SomeClass:\n    pass\n\nif __name__ == \'__main__\':\n    # A comment\n    print \'hello world\'\n```\n\n### 4. 高效绘制 [流程图](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#7-流程图)\n\n```flow\nst=>start: Start\nop=>operation: Your Operation\ncond=>condition: Yes or No?\ne=>end\n\nst->op->cond\ncond(yes)->e\ncond(no)->op\n```\n\n### 5. 高效绘制 [序列图](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#8-序列图)\n\n```seq\nAlice->Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob-->Alice: I am good thanks!\n```\n\n### 6. 高效绘制 [甘特图](https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#9-甘特图)\n\n```gantt\n    title 项目开发流程\n    section 项目确定\n        需求分析       :a1, 2016-06-22, 3d\n        可行性报告     :after a1, 5d\n        概念验证       : 5d\n    section 项目实施\n        概要设计      :2016-07-05  , 5d\n        详细设计      :2016-07-08, 10d\n        编码          :2016-07-15, 10d\n        测试          :2016-07-22, 5d\n    section 发布验收\n        发布: 2d\n        验收: 3d\n```\n\n### 7. 绘制表格\n\n| 项目        | 价格   |  数量  |\n| --------   | -----:  | :----:  |\n| 计算机     | \\$1600 |   5     |\n| 手机        |   \\$12   |   12   |\n| 管线        |    \\$1    |  234  |\n\n### 8. 更详细语法说明\n\n想要查看更详细的语法说明，可以参考我们准备的 [Cmd Markdown 简明语法手册][1]，进阶用户可以参考 [Cmd Markdown 高阶语法手册][2] 了解更多高级功能。\n\n总而言之，不同于其它 *所见即所得* 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。**Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。** 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。\n\n---\n\n## 什么是 Cmd Markdown\n\n您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 **编辑/发布/阅读** Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。\n\n### 1. 实时同步预览\n\n我们将 Cmd Markdown 的主界面一分为二，左边为**编辑区**，右边为**预览区**，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！\n\n### 2. 编辑工具栏\n\n也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 **编辑区** 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。\n\n![tool-editor](https://www.zybuluo.com/static/img/toolbar-editor.png)\n\n### 3. 编辑模式\n\n完全心无旁骛的方式编辑文字：点击 **编辑工具栏** 最右侧的拉伸按钮或者按下 `Ctrl + M`，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！\n\n### 4. 实时的云端文稿\n\n为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 **编辑工具栏** 的最右侧提示 `已保存` 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。\n\n### 5. 离线模式\n\n在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。\n\n### 6. 管理工具栏\n\n为了便于管理您的文稿，在 **预览区** 的顶部放置了如下所示的 **管理工具栏**：\n\n![tool-manager](https://www.zybuluo.com/static/img/toolbar-manager.jpg)\n\n通过管理工具栏可以：\n\n<i class=\"icon-share\"></i> 发布：将当前的文稿生成固定链接，在网络上发布，分享\n<i class=\"icon-file\"></i> 新建：开始撰写一篇新的文稿\n<i class=\"icon-trash\"></i> 删除：删除当前的文稿\n<i class=\"icon-cloud\"></i> 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地\n<i class=\"icon-reorder\"></i> 列表：所有新增和过往的文稿都可以在这里查看、操作\n<i class=\"icon-pencil\"></i> 模式：切换 普通/Vim/Emacs 编辑模式\n\n### 7. 阅读工具栏\n\n![tool-manager](https://www.zybuluo.com/static/img/toolbar-reader.jpg)\n\n通过 **预览区** 右上角的 **阅读工具栏**，可以查看当前文稿的目录并增强阅读体验。\n\n工具栏上的五个图标依次为：\n\n<i class=\"icon-list\"></i> 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落\n<i class=\"icon-chevron-sign-left\"></i> 视图：互换左边编辑区和右边预览区的位置\n<i class=\"icon-adjust\"></i> 主题：内置了黑白两种模式的主题，试试 **黑色主题**，超炫！\n<i class=\"icon-desktop\"></i> 阅读：心无旁骛的阅读模式提供超一流的阅读体验\n<i class=\"icon-fullscreen\"></i> 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境\n\n### 8. 阅读模式\n\n在 **阅读工具栏** 点击 <i class=\"icon-desktop\"></i> 或者按下 `Ctrl+Alt+M` 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。\n\n### 9. 标签、分类和搜索\n\n在编辑区任意行首位置输入以下格式的文字可以标签当前文档：\n\n标签： 未分类\n\n标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示：\n\n![file-list](https://www.zybuluo.com/static/img/file-list.png)\n\n### 10. 文稿发布和分享\n\n在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 <i class=\"icon-share\"></i> (Ctrl+Alt+P) 发布这份文档给好友吧！\n\n------\n\n再一次感谢您花费时间阅读这份欢迎稿，点击 <i class=\"icon-file\"></i> (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！\n\n作者 [@ghosert][3]     \n2016 年 07月 07日    \n\n[^LaTeX]: 支持 **LaTeX** 编辑显示支持，例如：$\\sum_{i=1}^n a_i=0$， 访问 [MathJax][4] 参考更多使用方法。\n\n[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，**四十一**种主流编程语言。\n\n[1]: https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown\n[2]: https://www.zybuluo.com/mdeditor?url=https://www.zybuluo.com/static/editor/md-help.markdown#cmd-markdown-高阶语法手册\n[3]: http://weibo.com/ghosert\n[4]: http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\n\n','Apache 3','v0.0.1',0),('cd2b9f72ba4111eb9b0000163e3058e5','xman','adf8ed64ba3e11eb9b0000163e3058e5','2021-05-21 14:35:34','2021-05-21 14:35:34',0,0,'```\ndfgdgf\n\n```\n\njhkljk hjaks dfhs\nsdfasjfas\nf\nfasd\n- f\n- fads\n- fad\n\n- xxxxx\nufyfyfyffy\n> ccccc\n\n```c\n\n#include <iostream>\nint main()\n{\n    int i = 0;\n}\n```','xxxxxx','v1.0',0);
/*!40000 ALTER TABLE `moments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `requests`
--

DROP TABLE IF EXISTS `requests`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `requests` (
  `id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '序列号',
  `initiator_id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '发起人id',
  `target_id` varchar(32) COLLATE utf8mb4_general_ci NOT NULL COMMENT '接受者id',
  `type` tinyint NOT NULL DEFAULT '0' COMMENT '加群，或者加好友',
  `submit_reason` text COLLATE utf8mb4_general_ci COMMENT '发起原因',
  `submit_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '发起时间',
  `solved_result` tinyint NOT NULL DEFAULT '0' COMMENT '处理结果',
  `solved_reason` text COLLATE utf8mb4_general_ci COMMENT '说明',
  `solved_time` timestamp NULL DEFAULT NULL COMMENT '受理时间',
  `extra` text COLLATE utf8mb4_general_ci,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci COMMENT='加群请求，加好友请求，等';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `requests`
--

LOCK TABLES `requests` WRITE;
/*!40000 ALTER TABLE `requests` DISABLE KEYS */;
INSERT INTO `requests` VALUES ('2a9f76d4ba3411eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','043354b2b99c11eb9b0000163e3058e5',0,'测试','2021-05-21 12:57:58',0,NULL,NULL,NULL),('71cb650ab9a111eb9b0000163e3058e5','c94d6fbdb99c11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5',0,'测试','2021-05-20 19:27:41',1,'Nice to meet you','2021-05-20 19:28:00',NULL),('80c222d0baa811eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','0c0f82a3ba3211eb9b0000163e3058e5',0,'测试','2021-05-22 02:50:44',0,NULL,NULL,NULL),('cb7a2850b98e11eb9b0000163e3058e5','fcd945db91b511eb9b0000163e3058e5','fcd9489991b511eb9b0000163e3058e5',0,'测试','2021-05-20 17:14:11',1,'Nice to meet you','2021-05-20 18:24:07',NULL);
/*!40000 ALTER TABLE `requests` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-06-13 20:35:36
